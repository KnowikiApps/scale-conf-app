name: Continuous Integraiton

on:
  push:
    branches: master
  pull_request:
    branches: master

jobs:
  android_build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: 11
        distribution: temurin

    - name: Setup Android SDK
      uses: android-actions/setup-android@v2

      # NOTE NOTE NOTE NOTE!!!!!!!!
      # NDK's 24 and 25 call llvm wrong:
      # https://bugreports.qt.io/browse/QTBUG-104580
      #
      # And NDK 23 can't build release builds (they fail to strip
      # debug symbols):
      # https://github.com/NativeScript/android/issues/1659
      #
      # So we MUST use NDK22
    - name: Install additional Android components
      run: |-
        sdkmanager \
          "build-tools;28.0.3" "platforms;android-28" \
          "build-tools;30.0.3" "platforms;android-30" \
          "build-tools;31.0.0" "platforms;android-31" \
          "build-tools;32.0.0" "platforms;android-32" \
          "build-tools;33.0.0" "platforms;android-33" \
          "ndk;22.1.7171670" \
          "ndk;23.2.8568313"

        sdkmanager --uninstall "ndk;25.2.9519653" "ndk;24.0.8215888"

    - name: Install Android Qt
      uses: jurplel/install-qt-action@v3.1.0
      with:
        host: linux
        target: android
        arch: android
        modules: 'qtcharts qtdatavis3d qtnetworkauth qtquick3d qtquicktimeline qtscript'
        archives: 'qtbase qtsvg qtxmlpatterns qtwebview qtquickcontrols2 qtmultimedia qtdeclarative'

    - name: Setup openssl
      run: git submodule update --init

    - name: Log tools
      run: |-
        export ANDROID_NDK_ROOT=/usr/local/lib/android/sdk/ndk/22.1.7171670
        echo "DEBUG: environment -->"
        env

        echo "DEBUG: tools -->"
        which qmake
        which make
        which sdkmanager
        which java
        which androiddeployqt
        which gradle

        echo "DEBUG: QT platform plugins -->"
        ls $Qt5_Dir/plugins/platforms/

        echo "DEBUG: SDK platforms -->"
        ls $ANDROID_SDK_ROOT/platforms

        echo "DEBUG: NDKs -->"
        ls $ANDROID_SDK_ROOT/ndk

    - name: Render Android icons
      run: |-
        cd $GITHUB_WORKSPACE/android/img
        pip install -r requirements.txt
        python3 render-images.py

    - name: Build Android binaries
      run: |-
        export ANDROID_NDK_ROOT=/usr/local/lib/android/sdk/ndk/22.1.7171670
        BUILD_DIR=$GITHUB_WORKSPACE/../build
        INSTALL_ROOT=$BUILD_DIR/android-build

        mkdir $BUILD_DIR
        cd $BUILD_DIR
        qmake $GITHUB_WORKSPACE/scale-conf.pro -spec android-clang \
          'CONFIG+=qtquickcompiler' \
          ANDROID_ABIS='armeabi-v7a arm64-v8a x86 x86_64'
        make qmake_all
        make -j 4
        make INSTALL_ROOT=$INSTALL_ROOT install

    - name: Package Android release (APK)
      run: |-
        export ANDROID_NDK_ROOT=/usr/local/lib/android/sdk/ndk/22.1.7171670
        BUILD_DIR=$GITHUB_WORKSPACE/../build
        INSTALL_ROOT=$BUILD_DIR/android-build
        cd $BUILD_DIR

        echo "Running deploy to-> ${INSTALL_ROOT}"
        #make apk
        androiddeployqt \
          --input $BUILD_DIR/android-scale-conf-deployment-settings.json \
          --output $INSTALL_ROOT \
          --android-platform android-33 \
          --gradle \
          --release
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.2
      with:
        # Artifact name
        name: # optional, default is artifact
        # A file, directory or wildcard pattern that describes what to upload
        path: $INSTALL_ROOT/build/outputs/apk/release/android-build-release-unsigned.apk
        # The desired behavior if no files are found using the provided path.
    Available Options:
      warn: Output a warning but do not fail the action
      error: Fail the action with an error message
      ignore: Do not output any warnings or errors, the action does not fail

        #if-no-files-found: # optional, default is warn
        # Duration after which artifact will expire in days. 0 means using default retention.
    Minimum 1 day. Maximum 90 days unless changed from the repository settings page.

        #retention-days: # optional
